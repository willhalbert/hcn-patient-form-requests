{"ast":null,"code":"var _jsxFileName = \"/Users/williamhalbert/Desktop/FORM-FILLER/client/src/components/form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/landing.css\";\nimport { motion } from \"framer-motion\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/login.css\";\nimport { degrees, PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport FileSaver from \"file-saver\";\nimport food from \"../uploads/medical-documentation-formula-food.pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(formChoice) {\n  _s();\n  const [clientName, setClientName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [submitMsg, setSubmitMsg] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  function updateForm(e) {\n    if (e.target.id === \"clientName\") {\n      setClientName(e.target.value);\n    }\n    if (e.target.id === \"dateOfBirth\") {\n      setDateOfBirth(e.target.value);\n    }\n  }\n  if (formChoice.formChoice === \"formulaAndFood\") {\n    const handleSubmit = async e => {\n      e.preventDefault();\n      console.log(\"submitted\");\n      if (clientName == \"\" || dateOfBirth == \"\") {\n        setSubmitMsg(\"unfilled\");\n        return;\n      } else setSubmitMsg(\"\");\n      FileSaver.saveAs(new Blob([food], {\n        type: \"application/pdf\"\n      }), `medical-documentation-formula-food.pdf`);\n      /*\n      fetch(\"http://127.0.0.1:4000/pdf\", {\n        headers: {\n          Accept: \"application/pdf\",\n        },\n      })\n        .then((response) => response.arrayBuffer())\n        .then((response) => {\n          FileSaver.saveAs(\n            new Blob([response.data], { type: \"application/pdf\" }),\n            `medical-documentation-formula-food.pdf`\n          );\n        });\n      */\n      async function modifyPdf() {\n        const pdfDoc = await PDFDocument.load(food);\n        const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n        const pages = pdfDoc.getPages();\n        const firstPage = pages[0];\n        const {\n          width,\n          height\n        } = firstPage.getSize();\n        firstPage.drawText(clientName, {\n          x: 5,\n          y: 10,\n          size: 14,\n          font: helveticaFont,\n          color: rgb(0, 0, 0)\n        });\n        firstPage.drawText(dateOfBirth, {\n          x: 20,\n          y: 10,\n          size: 14,\n          font: helveticaFont,\n          color: rgb(0, 0, 0)\n        });\n        const pdfBytes = await pdfDoc.save();\n      }\n      modifyPdf();\n\n      /*\n      navigate(\"../submitted\", { replace: true });\n      \n      async function formSubmitJSON() {\n        const response = await fetch(\"http://127.0.0.1:4000/food-and-formula\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            clientName,\n            dateOfBirth,\n          }),\n        });\n        const user = await response.json();\n        return user;\n      }\n      formSubmitJSON().then((user) => console.log(user));\n      */\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formField\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"POST\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"clientName\",\n          value: clientName,\n          onChange: e => updateForm(e),\n          placeholder: \"Client's name\",\n          className: \"defaultBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"dateOfBirth\",\n          value: dateOfBirth,\n          onChange: e => updateForm(e),\n          placeholder: \"Date of Birth\",\n          className: \"defaultBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"defaultSubmitBtn\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), submitMsg == \"unfilled\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"failedSubmit\",\n        children: \"Not every form input was filled. Try again please.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginToSignup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dontLogin\",\n          children: \"By clicking \\\"Submit\\\", you agree to our\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"../terms-of-use\",\n          className: \"loginLinkToSignup\",\n          children: \"terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"confirmAge\",\n        children: \"and confirm you're 18 years or older.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Form, \"aHpccpZvi7Z8Tz6D5JOlv4QAx/0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","motion","Link","useNavigate","useLocation","degrees","PDFDocument","rgb","StandardFonts","FileSaver","food","jsxDEV","_jsxDEV","Form","formChoice","_s","clientName","setClientName","dateOfBirth","setDateOfBirth","submitMsg","setSubmitMsg","navigate","location","updateForm","e","target","id","value","handleSubmit","preventDefault","console","log","saveAs","Blob","type","modifyPdf","pdfDoc","load","helveticaFont","embedFont","Helvetica","pages","getPages","firstPage","width","height","getSize","drawText","x","y","size","font","color","pdfBytes","save","className","children","action","onSubmit","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/williamhalbert/Desktop/FORM-FILLER/client/src/components/form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../css/landing.css\";\nimport { motion } from \"framer-motion\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/login.css\";\nimport { degrees, PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport FileSaver from \"file-saver\";\nimport food from \"../uploads/medical-documentation-formula-food.pdf\";\n\nfunction Form(formChoice) {\n  const [clientName, setClientName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [submitMsg, setSubmitMsg] = useState(\"\");\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  function updateForm(e) {\n    if (e.target.id === \"clientName\") {\n      setClientName(e.target.value);\n    }\n    if (e.target.id === \"dateOfBirth\") {\n      setDateOfBirth(e.target.value);\n    }\n  }\n\n  if (formChoice.formChoice === \"formulaAndFood\") {\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      console.log(\"submitted\");\n      if (clientName == \"\" || dateOfBirth == \"\") {\n        setSubmitMsg(\"unfilled\");\n        return;\n      } else setSubmitMsg(\"\");\n      FileSaver.saveAs(\n        new Blob([food], { type: \"application/pdf\" }),\n        `medical-documentation-formula-food.pdf`\n      );\n      /*\n      fetch(\"http://127.0.0.1:4000/pdf\", {\n        headers: {\n          Accept: \"application/pdf\",\n        },\n      })\n        .then((response) => response.arrayBuffer())\n        .then((response) => {\n          FileSaver.saveAs(\n            new Blob([response.data], { type: \"application/pdf\" }),\n            `medical-documentation-formula-food.pdf`\n          );\n        });\n      */\n      async function modifyPdf() {\n        const pdfDoc = await PDFDocument.load(food);\n        const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n        const pages = pdfDoc.getPages();\n        const firstPage = pages[0];\n        const { width, height } = firstPage.getSize();\n        firstPage.drawText(clientName, {\n          x: 5,\n          y: 10,\n          size: 14,\n          font: helveticaFont,\n          color: rgb(0, 0, 0),\n        });\n        firstPage.drawText(dateOfBirth, {\n          x: 20,\n          y: 10,\n          size: 14,\n          font: helveticaFont,\n          color: rgb(0, 0, 0),\n        });\n        const pdfBytes = await pdfDoc.save();\n      }\n      modifyPdf();\n\n      /*\n      navigate(\"../submitted\", { replace: true });\n      \n      async function formSubmitJSON() {\n        const response = await fetch(\"http://127.0.0.1:4000/food-and-formula\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            clientName,\n            dateOfBirth,\n          }),\n        });\n        const user = await response.json();\n        return user;\n      }\n      formSubmitJSON().then((user) => console.log(user));\n      */\n    };\n\n    return (\n      <div className=\"formField\">\n        <form action=\"POST\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"clientName\"\n            value={clientName}\n            onChange={(e) => updateForm(e)}\n            placeholder=\"Client's name\"\n            className=\"defaultBtn\"\n          />\n          <input\n            type=\"text\"\n            id=\"dateOfBirth\"\n            value={dateOfBirth}\n            onChange={(e) => updateForm(e)}\n            placeholder=\"Date of Birth\"\n            className=\"defaultBtn\"\n          />\n          <input type=\"submit\" className=\"defaultSubmitBtn\" value=\"Submit\" />\n        </form>\n        {submitMsg == \"unfilled\" && (\n          <p className=\"failedSubmit\">\n            Not every form input was filled. Try again please.\n          </p>\n        )}\n        <div className=\"loginToSignup\">\n          <p className=\"dontLogin\">By clicking \"Submit\", you agree to our</p>\n          <Link to=\"../terms-of-use\" className=\"loginLinkToSignup\">\n            terms\n          </Link>\n        </div>\n        <p className=\"confirmAge\">and confirm you're 18 years or older.</p>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}